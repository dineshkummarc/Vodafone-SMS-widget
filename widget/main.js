/* 
 This file was generated by Dashcode.  
 You may edit this file to customize your widget or web page 
 according to the license.txt file included in the project.
 */
//
// Function: load()
// Called by HTML body element's onload event when the widget is ready to start
//
function load()
{
    dashcode.setupParts();
    if (v = widget.preferenceForKey("username"))
        document.getElementById("username").value = v;
    if (v = widget.preferenceForKey("password"))
        document.getElementById("password").value = v;

		var data = AddressBook.numbers();
		$(function() {
			alert("hi");
			$("#phoneNumber").autocomplete(data, { 
				width: 240,
				formatItem: function(n) { return "" + n[0] + "--" + n[2]; },
				formatResult: function(data) { return data[2]; },
				scrollHeight: 100,
				matchContains: true
			}).result(function() { $("#body").focus() });
		});
}

//
// Function: remove()
// Called when the widget has been removed from the Dashboard
//
function remove()
{
    // Stop any timers to prevent CPU usage
    // Remove any preferences as needed
    widget.setPreferenceForKey(document.getElementById("username").value, "username");
    widget.setPreferenceForKey(document.getElementById("password").value, "password");
    // widget.setPreferenceForKey(null, dashcode.createInstancePreferenceKey("your-key"));
}

//
// Function: hide()
// Called when the widget has been hidden
//
function hide()
{
    // Stop any timers to prevent CPU usage
}

//
// Function: show()
// Called when the widget has been shown
//
function show()
{
	var data = AddressBook.numbers();
	$("#phoneNumber").setOption({data: data});
    // Restart any timers that were stopped on hide
}

//
// Function: sync()
// Called when the widget has been synchronized with .Mac
//
function sync()
{
    // Retrieve any preference values that you need to be synchronized here
    // Use this for an instance key's value:
    // instancePreferenceValue = widget.preferenceForKey(null, dashcode.createInstancePreferenceKey("your-key"));
    //
    // Or this for global key's value:
    // globalPreferenceValue = widget.preferenceForKey(null, "your-key");
}

//
// Function: showBack(event)
// Called when the info button is clicked to show the back of the widget
//
// event: onClick event from the info button
//
function showBack(event)
{
    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToBack");
    }

    front.style.display = "none";
    back.style.display = "block";

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }
}

//
// Function: showFront(event)
// Called when the done button is clicked from the back of the widget
//
// event: onClick event from the done button
//
function showFront(event)
{
    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToFront");
    }

    front.style.display="block";
    back.style.display="none";

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }

    widget.setPreferenceForKey("username", document.getElementById("username").value);
    widget.setPreferenceForKey("password", document.getElementById("password").value);

}

if (window.widget) {
    widget.onremove = remove;
    widget.onhide = hide;
    widget.onshow = show;
    widget.onsync = sync;
}


function sendSMS(event)
{
    var status = document.getElementById("status");
    var username = document.getElementById("username").value;
    var password = document.getElementById("password").value;
    var to = document.getElementById("phoneNumber").value;
    var text = document.getElementById("body").value;

    if (text == "") {
        status.innerHTML = "Need text to send";
        return;
    } else if (text.length > 135) {
        status.innerHTML = "Text too big!";
        return;
    }
    
    if (username == "" || password == "") {
        status.innerHTML = "Need username and password";
        return;
    }
    status.innerHTML = "Sending SMS...";
    text = text.replace(/'/g, "'\\''");
    
   var call = "ruby vodafone.rb " + username + " " +
        password + " " + to + " '" + text + "'";
    
    var ret = widget.system(call, null);
    if (ret.status == 0)
        status.innerHTML = "<b>SMS sent successfully</b>";
    else if (ret.status == 4)
        status.innerHTML = "<b>No more messages today!</b>";
    else if (ret.status == 6)
        status.innerHTML = "<b>Verkeerde inlog gegevens</b>";        
    else {
        status.innerHTML = "<b>Error. Code: " + ret.status + "</b>";
        text.innerHTML = "Error output: " + ret.outputString + "\n" + ret.errorString;
    }
}


function limitText(limitField, limitNum) {
    if (limitField.value.length > limitNum) {
        limitField.value = limitField.value.substring(0, limitNum);
    } 
}

